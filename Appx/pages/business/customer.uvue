<template>
	<!-- <uv-list @scrolltolower="handleCustomers"> -->
	<scroll-view scroll-y="true" style="flex:1;background-color: #bce0f2;">
		<list-view>
			<list-item class="card" v-for="(customer, index) in customers" :key="index">
				<view class="flex-1">
					<view class="flex justify-start my-2">
						<text class="font-20 bold">{{index+1}}. {{customer.name}}</text>
					</view>
					<view class="flex justify-end my-2">
						<text class="border-1" :class="[fontColor(customer.status)]">{{customer.status}}</text>
					</view>
					<view class="flex justify-content-start mb-2">
						<text class="font-15">编号：</text>
						<text class="font-18 boldfont-18 bold">{{customer.code}}</text>
					</view>
					<view class="flex justify-content-start mb-2">
						<text class="font-15">统一社会信用代码：</text>
						<text class="font-18 bold">{{customer.unified_social_credit_identifier}}</text>
					</view>
					<view class="flex justify-content-start mb-2">
						<text class="font-15">法定代表人：</text>
						<text class="font-18 bold">{{customer.legal_representative}}</text>
					</view>
					<view v-if="customer.contact!=''" class="flex justify-content-start mb-2">
						<text class="font-15">负责人：</text>
						<view class="flex-row">
							<text class="font-18 bold" :selectable="true">{{customer.manager}}</text>
							<text class="font-18 bold" :selectable="true">{{customer.contact}}</text>
						</view>
					</view>
					<view v-else class="flex justify-content-start mb-2">
						<text class="font-15">负责人：</text>
						<text class="font-18 bold" :selectable="true">{{customer.manager}}</text>
					</view>
					<view class="flex justify-content-start mb-2">
						<text class="font-15">地址：</text>
						<text class="font-15" :selectable="true">{{customer.address}}</text>
					</view>
					<view class="flex justify-content-start mb-2">
						<text class="font-15">应收账款：￥</text>
						<text class="color-error font-18 bold">999.000</text>
					</view>
					<view class="flex justify-content-end">
						<button type="primary" :plain="true" @click="go(customer)" :size="18">查看流水</button>
					</view>
				</view>
			</list-item>
		</list-view>
		<!-- <textoverlay :show="loading"/> -->
		<view v-if="loading" class="flex justify-content-start">
			<text></text>
		</view>
		<text :safearea="true" :height="30"></text>
	</scroll-view>
</template>

<script>
	import { getToken } from '@/store/auth';
	import { Customer, CustomerPage, CustomerPageRequest } from '@/types/customer';
	import { getURL } from '@/utils/request';
	import { Result } from '@/types/base.uts';

	export default {
		data() {
			return {
				//表单
				form: {
					page: 1,
					size: 10,
					name: '',
					code: '',
					manager: '',
					contact: '',
					email: '',
				} as CustomerPageRequest,
				isEnd: false,
				//供应商列表
				customers: [] as Customer[],
				total: 0,
				loading: false,
			}
		},
		methods: {
			//供应商列表
			handleCustomers() {
				if (this.loading || this.isEnd) {//有其他请求未结束
					return
				}

				this.loading = true

				this.loading = false
				uni.request<Result<CustomerPage>>({
					url: getURL('customer'),
					method: 'GET',
					header: {
						Authorization: getToken()
					},
					// data: this.form.value,
					data: {
						page: this.form.page,
						size: this.form.size,
					},
					success: (res) => {
						let r = res.data
						if (r == null) return
						if (res.statusCode != 200) {
							uni.showToast({
								title: r.msg,
								icon: 'error'
							})
							return
						}

						if (r.code != 200) {
							uni.showToast({
								title: r.msg,
								icon: 'error'
							})
							return
						}

						if (this.form.page == 1) {
							this.customers = r.data?.list as Customer[]
						} else {
							this.customers.push(...(r.data?.list as Customer[]))
						}

						this.total = r.data?.total as number

						if (r.data?.list?.length == this.form.size) {
							this.form.page++
							this.isEnd = false
						} else {
							this.isEnd = true
							uni.showToast({
								title: '到底了',
								icon: 'none'
							})
						}
					},
					fail: (err) => {
						console.log('fail:', err)
						uni.showToast({
							title: err.errMsg,
							icon: 'fail'
						})
					},
					complete: () => {
						console.log('complete:')
						uni.hideLoading()
					}
				});

			},
			//跳转
			go(customer:Customer) {
				console.log('跳转到供应商: ', customer)
				// console.log(new URLSearchParams(customer).toString())
				// let params = new URLSearchParams(customer).toString()
				// uni.navigateTo({
				// 	url: '/pages/business_partner/customer/transaction?'+Object.keys(customer).map(key => `${key}=${customer[key]}`).join('&')
				// })
			},
			//供应商状态对应的样式
			fontColor(status:string):string {
				let res = ''
				switch (status) {
					case '审核中':
						res = 'color-primary'
						break
					case '审核不通过':
						res = 'color-warning'

						break
					case '活动':
						res = 'color-success'

						break
					case '停用':
						res = 'color-info'

						break
					case '黑名单':
						res = 'color-error'

						break
					case '合同到期':
						res = 'color-error'
						break
					default:

				}
				return res
			}
		},
		mounted() {
			this.handleCustomers()
		},
		onReachBottom() {
			this.handleCustomers()
		}
	}
</script>

<style>

</style>